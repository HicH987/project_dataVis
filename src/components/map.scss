.map-day {
  // border: #000 solid 1px;
  height: 450px;

  display: grid;
  grid-template-columns: 150px 1fr;
  grid-template-areas:
    "map map map"
    "zoom-move c event";
}
.main-svg {
  grid-area: map-start / map-start / map-end / map-end;
  width: 100%;
  height: 450px;
  border-radius: 10px;
  background-color: #c6c6c6a3;
  margin-bottom: 10px;
  box-shadow: 1px 5px 5px 1px rgba(0, 0, 0, 0.17);
}

.sidebar{
  border: chocolate 1px solid;
  grid-area: map-start/ event-start/ map-end/ event-end;
}
.EventsDay {
  grid-area: map-start/ event-start/ map-end/ event-end;
}
.bat-txt {
  font-weight: bold;
  text-shadow: 0 0 1px black, 0 0 1px black, 0 0 1px black, 0 0 1px black;
}

.btns {
  grid-area: map-start / zoom-move-start / footer-end / zoom-move-end;
  width: 120px;
  height: 400px;

  display: flex;
  flex-direction: column;
  justify-content: space-between;

  position: relative;
  top: 8px;
  right: 22px;
}

.btn-z {
  width: 40px;
  font-size: 1.5em;
  background-color: #e7e7e7;
  color: rgb(39, 39, 39);
  cursor: pointer;
}
.zoom-btn {
  display: flex;
  flex-direction: column;
}
.move-btn {
  display: grid;

  grid-template-columns: 40px 40px 40px;
  grid-template-areas:
    ". u ."
    "l c r"
    ". d .";
}
.up {
  grid-area: u;
}
.left {
  grid-area: l;
}
.center {
  grid-area: c;
}
.right {
  grid-area: r;
}
.down {
  grid-area: d;
}

.class-info {
  background-color: rgb(251, 251, 251);
  width: 150px;
  border-radius: 10px;
  list-style: none;
  padding: 0px;
}
.class-info strong {
  font-weight: bold;
}
.class-info li {
  padding-inline: 10px;
  padding-block: 5px;
  text-align: left;
  display: flex;
  justify-content: space-between;
}
.class-info-header{
  // width: 170px;
  border-radius: 10px 10px 0px 0px;
  color: #fff;
  background-color: #000;
}






.classtip > li {
  padding: 2px;
}

table {
  /*add border-spacing: 0     instead of     border-collapse: collapse*/
  border-spacing: 0;
  font-size: 1rem;
  min-width: 230px;
  border-radius: 10px;
  background-color: #ffffff;
}

/* Start psuedo child tags here, targeting each data elements relevant corners and sides */

table tr td:first-of-type {
  border-left: 1px solid #c3c3c3;
}

table tr td:last-of-type {
  border-right: 1px solid #c3c3c3;
}

/* :not(:first-child):not(:last-child)
This will get any potential data tables that are added 
that are not sides or corners however, they are border 
data tables on top or bottom */

table tr:first-of-type td:not(:first-child):not(:last-child) {
  border-top: 1px solid #c3c3c3;
}

table tr:last-of-type td:not(:first-child):not(:last-child) {
  border-bottom: 1px solid #c3c3c3;
}

table tr:first-of-type td:first-child {
  border-top: 1px solid #c3c3c3;
  border-top-left-radius: 10px;
}

table tr:first-of-type td:last-child {
  border-top: 1px solid #c3c3c3;
  border-top-right-radius: 10px;
}

table tr:last-of-type td:last-child {
  border-right: 1px solid #c3c3c3;
  border-bottom: 1px solid #c3c3c3;
  border-bottom-right-radius: 10px;
}

table tr:last-of-type td:first-child {
  border-left: 1px solid #c3c3c3;
  border-bottom: 1px solid #c3c3c3;
  border-bottom-left-radius: 10px;
}

/* End Psuedo tags here */

table tr {
  border-bottom: solid 1px #d1d1d1;
}

table tr:nth-child(odd) {
  background-color: #000;
  color: #fff;
}

table td {
  padding: 5px 15px;
}

table td:first-of-type {
  font-weight: 600;
}

.toDlt {
  cursor: pointer;
}


